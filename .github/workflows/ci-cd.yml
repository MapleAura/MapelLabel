name: Build Executable

on: 
  push:
    tags:
      - '*'  # 任何tag都会触发工作流

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install PyInstaller
      run: pip install pyinstaller

    # 如果你的项目需要其他依赖，也在这里安装
    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run build script
      run: .\script\packer.bat
      shell: cmd

    # 使用PowerShell创建ZIP包
    - name: Zip files
      run: Compress-Archive -Path dist\MapleLabel\* -DestinationPath MapleLabel.zip # 替换成实际路径和文件名
      shell: powershell

    # 可以根据实际输出的exe文件名修改 'your_script.exe'
    - name: Upload ZIP as artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-executable
        path: MapleLabel.zip

    - name: Push release to public repository
      uses: actions/github-script@0.9.0
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }} # 设置为访问公共仓库的Personal Access Token
      with:
        github-token: ${{ env.API_TOKEN_GITHUB }}
        script: |
          const fs = require('fs');
          const path = 'MapleLabel.zip'; // 必要时更改文件名
          const content = fs.readFileSync(path, {encoding: 'base64'});
          // 这里填写公开仓库的owner和repo
          const owner = 'MapleAura';
          const repo = 'MapleLabelPub';
          const tag = ${{ github.ref }}; // 根据实际情况设置tag
          const releaseResponse = await github.repos.createRelease({
            owner,
            repo,
            tag_name: tag,
            name: tag,
          });
          const { upload_url } = releaseResponse.data;
          await github.repos.uploadReleaseAsset({
            url: upload_url,
            headers: {
              'content-type': 'application/octet-stream',
              'content-length': fs.statSync(path).size,
            },
            name: path,
            data: fs.readFileSync(path),
          });
