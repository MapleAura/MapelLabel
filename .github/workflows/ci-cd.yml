name: Build Executable and Release

on: 
  push:
    tags:
      - '*'  # 任何tag都会触发工作流

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Install dependencies
      run: pip install -r requirements.txt

    # 如果你的项目需要其他的构建步骤，例如构建前端代码，也可以在这里添加
    # ...

    - name: Run build script
      run: .\script\packer.bat
      shell: cmd

    - name: Zip files
      run: Compress-Archive -Path dist\MapleLabel\* -DestinationPath MapleLabel.zip
      shell: powershell

    - name: Upload ZIP as artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-executable
        path: MapleLabel.zip

    - name: Extract tag name
      run: echo "TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
      shell: bash

    - name: Push release to public repository
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = 'MapleLabel.zip';
          const owner = 'MapleAura';
          const repo = 'MapleLabelPub';
          const tag = process.env.TAG_NAME;
          
          // Create a new GitHub Release
          const releaseResponse = await github.rest.repos.createRelease({
            owner,
            repo,
            tag_name: tag,
            name: `Release ${tag}`,
            body: `Release of version ${tag}`
          });
          
          const { upload_url } = releaseResponse.data;
          
          // Upload the ZIP package as a Release Asset
          await github.rest.repos.uploadReleaseAsset({
            url: upload_url,
            headers: {
              'content-type': 'application/octet-stream',
              'content-length': fs.statSync(path).size,
            },
            name: `${tag}-MapleLabel.zip`,
            data: fs.readFileSync(path)
          });
        github-token: ${{ secrets.API_TOKEN_GITHUB }}